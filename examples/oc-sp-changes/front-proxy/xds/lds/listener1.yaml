address:
  socket_address:
    address: 0.0.0.0
    port_value: 443
filter_chains:
- filter_chain_match:
    server_names: [service1.ocenvoy.com]
  filters:
  - name: envoy.filters.network.http_connection_manager
    typed_config:
      '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
      codec_type: AUTO
      http_filters:
      - name: envoy.filters.http.on_demand
        typed_config: {}
      - name: envoy.filters.http.router
        typed_config: {}
      rds:
        config_source:
          ads: {}
          resource_api_version: V3
        route_config_name: local_https_route
      stat_prefix: ingress_http
  transport_socket:
    name: envoy.transport_sockets.tls
    typed_config:
      '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
      common_tls_context:
        tls_certificate_sds_secret_configs:
        - name: service1.ocenvoy.com
          sds_config:
            ads: {}
            resource_api_version: V3
- filter_chain_match:
    server_names: [service2.ocenvoy.com]
  filters:
  - name: envoy.filters.network.http_connection_manager
    typed_config:
      '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
      codec_type: AUTO
      http_filters:
      - name: envoy.filters.http.on_demand
        typed_config: {}
      - name: envoy.filters.http.router
        typed_config: {}
      rds:
        config_source:
          ads: {}
          resource_api_version: V3
        route_config_name: local_https_route
      stat_prefix: ingress_http
  transport_socket:
    name: envoy.transport_sockets.tls
    typed_config:
      '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
      common_tls_context:
        tls_certificate_sds_secret_configs:
        - name: service2.ocenvoy.com
          sds_config:
            ads: {}
            resource_api_version: V3
listener_filters:
- name: envoy.filters.listener.tls_inspector
  typed_config: {}
name: listener1
